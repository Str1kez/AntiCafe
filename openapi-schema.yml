openapi: 3.0.3
info:
  title: AntiCafe API
  version: 0.2.0
  description: AntiCafe API для посетителей и официантов
paths:
  /api/qrcode/:
    get:
      operationId: Get QRCode
      description: '# Получение QR-Кода'
      tags:
      - qrcode
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                CorrectResponse:
                  value:
                    data: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    dt_created: '2022-11-16T22:41:51.715Z'
                  summary: Correct Response
                  description: Получение QR-кода
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                InvalidToken:
                  value:
                    detail: Given token not valid for any token type
                    code: token_not_valid
                    messages:
                    - token_class: AccessToken
                      token_type: access
                      message: Token is invalid or expired
                  summary: invalid_token
                  description: Неверный токен
                EmptyToken:
                  value:
                    detail: Учетные данные не были предоставлены.
                  summary: empty_token
                  description: Без токена
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                UserNotFound:
                  value:
                    detail: Страница не найдена.
                  summary: user_not_found
                  description: Нет данных по такому id
          description: ''
    post:
      operationId: Generate QRCode
      description: '# Генерация QR-кода'
      tags:
      - qrcode
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QRCodeGeneration'
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                InvalidToken:
                  value:
                    detail: Given token not valid for any token type
                    code: token_not_valid
                    messages:
                    - token_class: AccessToken
                      token_type: access
                      message: Token is invalid or expired
                  summary: invalid_token
                  description: Неверный токен
                EmptyToken:
                  value:
                    detail: Учетные данные не были предоставлены.
                  summary: empty_token
                  description: Без токена
          description: ''
        '402':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                OpenedBill:
                  value:
                    detail: Есть неоплаченный счет
                  summary: opened_bill
                  description: В случае получения кода без оплаты предыдущего
          description: ''
  /api/qrcode/scan/{id}/:
    patch:
      operationId: Scan QRCode
      description: '# Обновляет код как **оплаченный**'
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: ID QRCode
        required: true
        examples:
          IdExample:
            value: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            summary: id_example
      tags:
      - qrcode
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QRCodeScan'
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                InvalidToken:
                  value:
                    detail: Given token not valid for any token type
                    code: token_not_valid
                    messages:
                    - token_class: AccessToken
                      token_type: access
                      message: Token is invalid or expired
                  summary: invalid_token
                  description: Неверный токен
                EmptyToken:
                  value:
                    detail: Учетные данные не были предоставлены.
                  summary: empty_token
                  description: Без токена
          description: ''
        '403':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                NoPermission:
                  value:
                    detail: У вас недостаточно прав для выполнения данного действия.
                  summary: no_permission
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                UserNotFound:
                  value:
                    detail: Страница не найдена.
                  summary: user_not_found
                  description: Нет данных по такому id
          description: ''
  /api/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/blacklist/:
    post:
      operationId: token_blacklist_create
      description: |-
        # Need to be authenticated for logout
        Front must go to endpoint with `'refresh'` token in data
        After that, delete `'access'` token from cookie
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenBlacklist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenBlacklist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenBlacklist'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenBlacklist'
          description: ''
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/users/admin/:
    get:
      operationId: Client List
      description: '# Получение списка клиентов'
      tags:
      - admin
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                InvalidToken:
                  value:
                    detail: Given token not valid for any token type
                    code: token_not_valid
                    messages:
                    - token_class: AccessToken
                      token_type: access
                      message: Token is invalid or expired
                  summary: invalid_token
                  description: Неверный токен
                EmptyToken:
                  value:
                    detail: Учетные данные не были предоставлены.
                  summary: empty_token
                  description: Без токена
          description: ''
        '403':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                NoPermission:
                  value:
                    detail: У вас недостаточно прав для выполнения данного действия.
                  summary: no_permission
          description: ''
  /api/users/admin/{id}/:
    get:
      operationId: Client Retrieve
      description: '# Получение инфы об определенном клиенте'
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: ID Клиента
        required: true
        examples:
          IdExample:
            value: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            summary: id_example
      tags:
      - admin
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                InvalidToken:
                  value:
                    detail: Given token not valid for any token type
                    code: token_not_valid
                    messages:
                    - token_class: AccessToken
                      token_type: access
                      message: Token is invalid or expired
                  summary: invalid_token
                  description: Неверный токен
                EmptyToken:
                  value:
                    detail: Учетные данные не были предоставлены.
                  summary: empty_token
                  description: Без токена
          description: ''
        '403':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                NoPermission:
                  value:
                    detail: У вас недостаточно прав для выполнения данного действия.
                  summary: no_permission
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                UserNotFound:
                  value:
                    detail: Страница не найдена.
                  summary: user_not_found
                  description: Нет данных по такому id
          description: ''
  /api/users/client/:
    get:
      operationId: Client Info
      description: '# Получение инфы о себе'
      tags:
      - client
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                InvalidToken:
                  value:
                    detail: Given token not valid for any token type
                    code: token_not_valid
                    messages:
                    - token_class: AccessToken
                      token_type: access
                      message: Token is invalid or expired
                  summary: invalid_token
                  description: Неверный токен
                EmptyToken:
                  value:
                    detail: Учетные данные не были предоставлены.
                  summary: empty_token
                  description: Без токена
          description: ''
  /api/users/client/{id}/:
    patch:
      operationId: Client Bio
      description: |-
        # Обновление ***о себе***
        ## Юзаем `PATCH` запрос, чтобы не удалить пустые поля
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this пользователь.
        required: true
      tags:
      - client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                UserExists:
                  value:
                    username:
                    - Пользователь с таким именем уже существует.
                  summary: user_exists
                  description: Пользователь с таким **username** уже существует
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                InvalidToken:
                  value:
                    detail: Given token not valid for any token type
                    code: token_not_valid
                    messages:
                    - token_class: AccessToken
                      token_type: access
                      message: Token is invalid or expired
                  summary: invalid_token
                  description: Неверный токен
                EmptyToken:
                  value:
                    detail: Учетные данные не были предоставлены.
                  summary: empty_token
                  description: Без токена
          description: ''
    delete:
      operationId: Client Deletion
      description: |-
        # Удаление пользователя
        ## Вместо удаления отмечаем их как не активные
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this пользователь.
        required: true
      tags:
      - client
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
        '401':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                InvalidToken:
                  value:
                    detail: Given token not valid for any token type
                    code: token_not_valid
                    messages:
                    - token_class: AccessToken
                      token_type: access
                      message: Token is invalid or expired
                  summary: invalid_token
                  description: Неверный токен
                EmptyToken:
                  value:
                    detail: Учетные данные не были предоставлены.
                  summary: empty_token
                  description: Без токена
          description: ''
  /api/users/client/history/:
    get:
      operationId: Client History
      description: '# Получение истории посещений'
      tags:
      - client
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QRCodeScan'
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                InvalidToken:
                  value:
                    detail: Given token not valid for any token type
                    code: token_not_valid
                    messages:
                    - token_class: AccessToken
                      token_type: access
                      message: Token is invalid or expired
                  summary: invalid_token
                  description: Неверный токен
                EmptyToken:
                  value:
                    detail: Учетные данные не были предоставлены.
                  summary: empty_token
                  description: Без токена
          description: ''
  /api/users/register/:
    post:
      operationId: User
      description: '# Регистрация пользователя'
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                UserExists:
                  value:
                    username:
                    - Пользователь с таким именем уже существует.
                  summary: user_exists
                  description: Пользователь с таким **username** уже существует
          description: ''
components:
  schemas:
    PatchedUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          title: Имя пользователя
          description: Обязательное поле. Не более 150 символов. Только буквы, цифры
            и символы @/./+/-/_.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
          title: Пароль
          maxLength: 128
        fullname:
          type: string
        email:
          type: string
          format: email
          title: Адрес электронной почты
          maxLength: 254
        avatar:
          type: string
          format: uri
          nullable: true
        phone:
          type: string
          nullable: true
          title: Телефон
          maxLength: 12
        is_staff:
          type: boolean
          readOnly: true
          title: Статус персонала
          description: Отметьте, если пользователь может входить в административную
            часть сайта.
    QRCodeGeneration:
      type: object
      properties:
        data:
          type: string
          format: uuid
        dt_created:
          type: string
          format: date-time
          readOnly: true
      required:
      - dt_created
    QRCodeScan:
      type: object
      properties:
        data:
          type: string
          format: uuid
        dt_created:
          type: string
          format: date-time
          readOnly: true
        dt_payment:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
      required:
      - cost
      - dt_created
      - dt_payment
    TokenBlacklist:
      type: object
      properties:
        refresh:
          type: string
      required:
      - refresh
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          title: Имя пользователя
          description: Обязательное поле. Не более 150 символов. Только буквы, цифры
            и символы @/./+/-/_.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
          title: Пароль
          maxLength: 128
        fullname:
          type: string
        email:
          type: string
          format: email
          title: Адрес электронной почты
          maxLength: 254
        avatar:
          type: string
          format: uri
          nullable: true
        phone:
          type: string
          nullable: true
          title: Телефон
          maxLength: 12
        is_staff:
          type: boolean
          readOnly: true
          title: Статус персонала
          description: Отметьте, если пользователь может входить в административную
            часть сайта.
      required:
      - fullname
      - id
      - is_staff
      - password
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
servers:
- url: http://localhost:8001
  description: host
tags:
- name: admin
  description: Ручки для официанта
- name: client
  description: Ручки для посетителя
- name: token
  description: Ручки для токенов
- name: users
  description: Общая ручка для регистрации
- name: qrcode
  description: Ручки для работы с QR
